import {Emulator} from "../../src/Emulator.ts";
import {describe, expect, test} from "bun:test";
import {parseDisplay} from "../utils/parseDisplay.ts";
import {NoDisplay} from "../../src/Displays/NoDisplay.ts";

const file = await Bun.file("lib/chip8-test-suite/bin/3-corax+.ch8").bytes();

const resultScreenState = `
................................................................
..███.█.█.........███.█.█.........███.█.█.........███.███.......
...██..█...█.█......█..█...█.█....███.███..█.█....█...██...█.█..
....█.█.█..██.....██..█.█..██.....█.█...█..██.....██....█..██...
..███.█.█..█......███.█.█..█......███...█..█......█...██...█....
................................................................
..█.█.█.█.........███.███.........███.███.........███.███.......
..███..█...█.█....█.█.██...█.█....███.██...█.█....█....██..█.█..
....█.█.█..██.....█.█.█....██.....█.█...█..██.....██....█..██...
....█.█.█..█......███.███..█......███.██...█......█...███..█....
................................................................
..███.█.█.........███.███.........███.███.........███.███.......
..██...█...█.█....███.█.█..█.█....███...█..█.█....█...██...█.█..
....█.█.█..██.....█.█.█.█..██.....█.█..█...██.....██..█....██...
..██..█.█..█......███.███..█......███..█...█......█...███..█....
................................................................
..███.█.█.........███.██..........███..██.............█.█.......
....█..█...█.█....███..█...█.█....███.█....█.█....█.█..█...█.█..
...█..█.█..██.....█.█..█...██.....█.█.███..██.....█.█.█.█..██...
...█..█.█..█......███.███..█......███.███..█.......█..█.█..█....
................................................................
..███.█.█.........███.███.........███.███.......................
..███..█...█.█....███...█..█.█....███.██...█.█..................
....█.█.█..██.....█.█.██...██.....█.█.█....██...................
..██..█.█..█......███.███..█......███.███..█....................
................................................................
..██..█.█.........███.███.........███..██.............█.█...███.
...█...█...█.█....███..██..█.█....█...█....█.█....█.█.███.....█.
...█..█.█..██.....█.█...█..██.....██..███..██.....█.█...█...██..
..███.█.█..█......███.███..█......█...███..█.......█....█.█.███.
................................................................
................................................................
`;

describe.only("ROM execute", () => {
    test.todo("pass all tests", async () => {
        const display = new NoDisplay();
        const emulator = new Emulator(Array.from(file), {
            display,
        });

        for (let i = 0; 400 > i; i++) {
            await emulator.step();
        }

        expect(display.state).toEqual(parseDisplay(resultScreenState));
    });
});


